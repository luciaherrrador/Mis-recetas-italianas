{"version":3,"sources":["components/Recipe.js","components/RecipeList.js","components/Search.js","components/RecipeInfo.js","components/App.js","services/Api.js","index.js"],"names":["Recipe","props","src","mealImage","alt","mealName","RecipeList","allRecipes","filter","recipe","value","strMeal","toLowerCase","includes","map","className","key","idMeal","to","strMealThumb","Search","htmlFor","onChange","evt","handleChange","target","type","RecipeInfo","strInstructions","App","bind","renderRecipeInfo","fetchSingleRecipe","state","singleRecipe","fetch","then","response","json","setState","meals","id","this","data","console","log","match","params","path","exact","getRecipeId","render","React","Component","ReactDOM","document","getElementById"],"mappings":"wRASeA,G,MAPA,SAAAC,GACb,OAAO,6BACL,yBAAKC,IAAKD,EAAME,UAAWC,IAAKH,EAAMI,WACtC,4BAAMJ,EAAMI,a,OCgBDC,EAjBI,SAAAL,GACf,OAAO,4BACFA,EAAMM,WACFC,QAAO,SAAAC,GAAM,MAAoB,KAAhBR,EAAMS,OAAgBD,EAAOE,QAAQC,cAAcC,SAASZ,EAAMS,UACnFI,KAAI,SAAAL,GAAM,OAAI,wBAAIM,UAAU,iBAAiBC,IAAKP,EAAOQ,QACtD,kBAAC,IAAD,CAAMC,GAAE,kBAAaT,EAAOQ,QACxBF,UAAU,cACV,kBAAC,EAAD,CACIZ,UAAWM,EAAOU,aAClBd,SAAUI,EAAOE,iBCC1BS,EAZA,SAAAnB,GAIX,OACI,yBAAKc,UAAU,qBACX,2BAAOA,UAAU,eAAeM,QAAQ,eAAxC,4BACA,2BAAOC,SANM,SAAAC,GACjBtB,EAAMuB,aAAaD,EAAIE,OAAOf,QAKKgB,KAAK,W,OCAjCC,EAPI,SAAA1B,GACf,OAAO,yBAAKc,UAAU,uBAClB,4BAAKd,EAAMQ,OAAOE,SAClB,yBAAKT,IAAKD,EAAMQ,OAAOU,eACvB,2BAAIlB,EAAMQ,OAAOmB,mBCsEVC,E,YAnEb,WAAY5B,GAAQ,IAAD,8BACjB,4CAAMA,KACDuB,aAAe,EAAKA,aAAaM,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBAEzB,EAAKG,MAAQ,CACX1B,WAAY,GACZG,MAAO,GACPwB,aAAc,IATC,E,iFAaE,IAAD,OCnBKC,MAHR,gEAG0BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDqBhEF,MAAK,SAAA3B,GACJ,EAAK8B,SAAS,CACZhC,WAAYE,EAAO+B,a,wCAKTC,GAAK,IAAD,OAChBA,IAAOC,KAAKT,MAAMC,aAAajB,QC5Bb,SAACwB,GAAD,OAAQN,MAHf,wDAGkCM,GAAIL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UD6B7EN,CAAkBS,GACfL,MAAK,SAAAO,GACJ,EAAKJ,SAAS,CACZL,aAAcS,EAAKH,MAAM,U,mCAMtB9B,GACXgC,KAAKH,SAAS,CACZ7B,MAAOA,M,uCAIMT,GAGf,OAFA2C,QAAQC,IAAI5C,GACZyC,KAAKV,kBAAkB/B,EAAM6C,MAAMC,OAAON,IACnC,kBAAC,EAAD,CAAYhC,OAAQiC,KAAKT,MAAMC,iB,+BAItC,OACE,yBAAKnB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,CACEzB,aAAckB,KAAKlB,eAErB,kBAAC,EAAD,CACEjB,WAAYmC,KAAKT,MAAM1B,WACvBG,MAAOgC,KAAKT,MAAMvB,MAClBwC,YAAaR,KAAKQ,eAGtB,kBAAC,IAAD,CAAOF,KAAK,cAAcG,OAAQT,KAAKX,yB,GA5D/BqB,IAAMC,WEDxBC,IAASH,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJI,SAASC,eAAe,W","file":"static/js/main.7ece1531.chunk.js","sourcesContent":["import React from 'react';\n\nconst Recipe = props => {\n  return <div >\n    <img src={props.mealImage} alt={props.mealName} />\n    <h3 >{props.mealName}</h3>\n  </div>\n}\n\nexport default Recipe;","import React from 'react';\nimport Recipe from './Recipe';\nimport { Link } from 'react-router-dom'\n\nconst RecipeList = props => {\n    return <ul>\n        {props.allRecipes\n            .filter(recipe => props.value === '' || recipe.strMeal.toLowerCase().includes(props.value))\n            .map(recipe => <li className=\"recipe-wrapper\" key={recipe.idMeal}>\n                <Link to={`/recipe/${recipe.idMeal}`}\n                    className=\"recipe_btn\">\n                    <Recipe\n                        mealImage={recipe.strMealThumb}\n                        mealName={recipe.strMeal}\n                    />\n                </Link>\n            </li>\n            )}\n\n    </ul>\n}\nexport default RecipeList;","import React from 'react';\n\nconst Search = props => {\n    const handleChange = evt => {\n        props.handleChange(evt.target.value)\n    }\n    return (\n        <div className=\"search_containter\">\n            <label className=\"search-label\" htmlFor=\"inputSearch\">introduce tu b√∫squeda</label>\n            <input onChange={handleChange} type=\"text\" ></input>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\n\nconst RecipeInfo = props => {\n    return <div className=\"recipe-info-wrapper\">\n        <h1>{props.recipe.strMeal}</h1>\n        <img src={props.recipe.strMealThumb} />\n        <p>{props.recipe.strInstructions}</p>\n    </div>\n}\nexport default RecipeInfo;","import React from 'react';\nimport '../stylesheets/App.css';\nimport RecipeList from './RecipeList';\nimport { fetchRecipes, fetchSingleRecipe } from '../services/Api';\nimport Search from './Search';\nimport { Switch, Route } from 'react-router-dom';\nimport RecipeInfo from './RecipeInfo';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.renderRecipeInfo = this.renderRecipeInfo.bind(this);\n    this.fetchSingleRecipe = this.fetchSingleRecipe.bind(this);\n\n    this.state = {\n      allRecipes: [],\n      value: '',\n      singleRecipe: {}\n    }\n  }\n\n  componentDidMount() {\n    fetchRecipes()\n      .then(recipe => {\n        this.setState({\n          allRecipes: recipe.meals\n        })\n      })\n  }\n\n  fetchSingleRecipe(id) {\n    if (id !== this.state.singleRecipe.idMeal) {\n      fetchSingleRecipe(id)\n        .then(data => {\n          this.setState({\n            singleRecipe: data.meals[0]\n          })\n        })\n    }\n  }\n\n  handleChange(value) {\n    this.setState({\n      value: value\n    })\n  }\n\n  renderRecipeInfo(props) {\n    console.log(props)\n    this.fetchSingleRecipe(props.match.params.id);\n    return <RecipeInfo recipe={this.state.singleRecipe} />\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Search\n              handleChange={this.handleChange}\n            />\n            <RecipeList\n              allRecipes={this.state.allRecipes}\n              value={this.state.value}\n              getRecipeId={this.getRecipeId}\n            />\n          </Route>\n          <Route path=\"/recipe/:id\" render={this.renderRecipeInfo}>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","const RECIPELIST = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=Italian';\nconst RECIPEINFO = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n\nconst fetchRecipes = () => fetch(RECIPELIST).then(response => response.json());\nconst fetchSingleRecipe = (id) => fetch(RECIPEINFO + id).then(response => response.json());\n\nexport { fetchRecipes, fetchSingleRecipe };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}